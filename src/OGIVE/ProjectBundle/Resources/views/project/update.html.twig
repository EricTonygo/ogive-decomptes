{% import _self as forms %}
{% extends "OGIVEProjectBundle::layout.html.twig" %}
{% trans_default_domain 'OGIVEProjectBundle' %}
{% block title %}Mise à jour du projet : {{project.numeroMarche}}{% endblock %}

{% block content %}
    <div class="ui basic fixed segment content">
        <div class='ui container od_add_project_container'>
            <div class="ui column stackable grid padded">
                <div class="wide column">
                    <div id="od_nav_menu" class="ui tiny menu">
                        <div class="left menu">
                            <a class="item" href="{{path('ogive_project_homepage')}}">Accueil</a>
                            <div class="item" style="padding-left: 0; padding-right: 0;"><i class="small right chevron icon divider"></i></div>
                            <a class="item" href="{{path('ogive_project_homepage')}}">Mes projets</a>
                            <div class="item" style="padding-left: 0; padding-right: 0;"><i class="small right chevron icon divider"></i></div>
                            <div class="item">Mise à jour</div>
                        </div>
                    </div>
                    <div class="ui container">
                        <div class="ui fluid card od_add_project_card">
                            <div class="content">
                                <div class="header">
                                    Mise à jour du projet: {{project.numeroMarche}}
                                </div>
                            </div>
                            <div class="content description">
                                {{ form_start(form, {'method': 'PUT', 'action': path('project_update', {'id': project.id}), 'attr': {'class': 'ui mini form', 'id': 'od_update_project_form', "autocomplete":"off"} }) }}
                                <h4 class="ui dividing header">Project Information</h4>

                                <div class="fields">
                                    <div class="five wide field">
                                        {{ form_label(form.numeroMarche,"N° du marché") }}
                                        <div class="field"> 
                                            {{ form_widget(form.numeroMarche,{'attr':{'placeholder':"Numéro du marché", 'data-validate': 'numero-marche'}})}}
                                        </div>
                                    </div>
                                    <div class="eleven wide field">
                                        {{ form_label(form.subject,"Objet") }}
                                        <div class="field"> 
                                            {{ form_widget(form.subject,{'attr':{'placeholder':"Objet du marché", 'data-validate': 'objet'}})}}
                                        </div>
                                    </div>
                                </div>
                                <div class="fields">
                                    <div class="eleven wide field">
                                        <label>Coût du projet</label>
                                        <div class="ui fields">
                                            <div class="five wide field">
                                                {{ form_widget(form.projectCostCurrency,{'attr':{'data-validate': 'projectCostCurrency', 'class': 'ui search dropdown'}})}}
                                            </div>
                                            <div class="eleven wide field">
                                                {{ form_widget(form.projectCost,{'attr':{'placeholder':"Amount", 'data-validate': 'project-cost-amount'}})}}
                                            </div>
                                        </div>
                                    </div>    
                                    <div class="five wide field">
                                        <label>Avance démarrage(%)</label>
                                        <div class="field">
                                            {{ form_widget(form.avanceDemarrage,{'attr':{'placeholder':"Avance démarrage", 'data-validate': 'avance_demarrage'}})}}
                                        </div>
                                    </div>
                                </div>

                                <div class="two fields">                                        
                                    <div class="ui field">
                                        <label>Lot (cas d'un marché alloti)<em>*</em></label>
                                        <div class="field"> 
                                            {{ form_widget(form.numeroLot,{'attr':{'placeholder':"Lot", 'data-validate': 'numero-lot'}})}}
                                        </div>
                                    </div>
                                    <div class="ui field">
                                        <label>Lieu d'exécution</label>
                                        <div class="field"> 
                                            {{ form_widget(form.lieuExecution,{'attr':{'placeholder':"Lieu d'exécution", 'data-validate': 'lieu-execution'}})}}
                                        </div>
                                    </div>
                                </div>
                                <div class="two fields">                                        
                                    <div class="ui field">
                                        <label>Région</label>
                                        {{ form_widget(form.region,{'attr':{'placeholder':"Région", 'data-validate': 'region'}})}}
                                    </div>
                                    <div class="ui field">
                                        <label>Département</label>
                                        {{ form_widget(form.departement,{'attr':{'placeholder':"departement", 'data-validate': 'departement'}})}}
                                    </div>
                                </div>
                                <div class="three fields">                                        
                                    <div class="ui field">
                                        <label>Date de souscription</label>
                                        <div class="field">
                                            <div class="ui calendar" >
                                                <div class="ui input left icon">
                                                    <i class="calendar icon"></i>
                                                    {{ form_widget(form.suscriptionDate,{'attr':{'placeholder':"Date de souscription", 'data-validate': 'suscription_date'}})}}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="ui field">
                                        <label>Date de signature</label>
                                        <div class="field">
                                            <div class="ui calendar" >
                                                <div class="ui input left icon">
                                                    <i class="calendar icon"></i>
                                                    {{ form_widget(form.signatureDate,{'attr':{'placeholder':"Date de signature", 'data-validate': 'signature_date'}})}}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="ui field">
                                        <label>Date de notification</label>
                                        <div class="field">
                                            <div class="ui calendar" >
                                                <div class="ui input left icon">
                                                    <i class="calendar icon"></i>
                                                    {{ form_widget(form.notificationDate,{'attr':{'placeholder':"Date de notification", 'data-validate': 'notification_date'}})}}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                {#<h4 class="ui dividing header">MISSION DE CONTRÔLE</h4>

                                <div class="ui field">
                                    <table class="ui very basic table">
                                        <thead>
                                            <tr><th>Nom</th>
                                                <th>Téléphone</th>
                                                <th>Email</th>
                                                <th class="right aligned">Action</th>
                                            </tr>
                                        </thead>

                                        <tbody class="projectManagers" data-prototype="{{ forms.projectManager_prototype(form.projectManagers.vars.prototype)|e }}">
                                            {% for projectManager in form.projectManagers %}
                                                <tr>
                                                    {{ forms.projectManager_prototype(projectManager) }}
                                                </tr>
                                            {% endfor %}
                                        </tbody>
                                        {% macro projectManager_prototype(childForm) %}
                                            <td>{{ form_widget(childForm.nom,{'attr':{'data-validate': 'project_manager_name', 'placeholder': 'Nom'}}) }}</td>
                                            <td>{{ form_widget(childForm.phone,{'attr':{'data-validate': 'project_manager_phone', 'placeholder': 'Téléphone'}}) }}</td>
                                            <td>{{ form_widget(childForm.email,{'attr':{'data-validate': 'project_manager_email', 'placeholder': 'Email'}}) }}</td> 
                                        {% endmacro %}

                                    </table>
                                </div>


                                <h4 class="ui dividing header">Titulaire</h4>

                                <div class="ui field">
                                    <table class="ui very basic table">
                                        <thead>
                                            <tr><th>Nom</th>
                                                <th>Téléphone</th>
                                                <th>Email</th>
                                                <th class="right aligned">Action</th>
                                            </tr>
                                        </thead>
                                        <tbody class="holders" data-prototype="{{ forms.holder_prototype(form.holders.vars.prototype)|e }}">
                                            {% for holder in form.holders %}
                                                <tr>
                                                    {{ forms.holder_prototype(holder) }}
                                                </tr>
                                            {% endfor %}
                                        </tbody>
                                        {% macro holder_prototype(childForm) %}
                                            <td>{{ form_widget(childForm.nom,{'attr':{'data-validate': 'holder_name', 'placeholder': "Nom"}}) }}</td>
                                            <td>{{ form_widget(childForm.phone,{'attr':{'data-validate': 'holder_phone', 'placeholder': 'Téléphone'}}) }}</td>
                                            <td>{{ form_widget(childForm.email,{'attr':{'data-validate': 'holder_email', 'placeholder': 'Email'}}) }}</td> 
                                        {% endmacro %}
                                    </table>
                                </div>

                                <h4 class="ui dividing header">Prestatires</h4>

                                <div class="ui field">
                                    <table class="ui very basic table">
                                        <thead>
                                            <tr><th>Nom</th>
                                                <th>Téléphone</th>
                                                <th>Email</th>
                                                <th class="right aligned">Action</th>
                                            </tr>
                                        </thead>
                                        <tbody class="service-providers" data-prototype="{{ forms.service_provider_prototype(form.serviceProviders.vars.prototype)|e }}">
                                            {% for serviceProvider in form.serviceProviders %}
                                                <tr>
                                                    {{ forms.service_provider_prototype(serviceProvider) }}
                                                </tr>
                                            {% endfor %}
                                        </tbody>
                                        {% macro service_provider_prototype(childForm) %}
                                            <td>{{ form_widget(childForm.nom,{'attr':{'data-validate': 'service_provider_name', 'placeholder': "Nom"}}) }}</td>
                                            <td>{{ form_widget(childForm.phone,{'attr':{'data-validate': 'service_provider_phone', 'placeholder': 'Téléphone'}}) }}</td>
                                            <td>{{ form_widget(childForm.email,{'attr':{'data-validate': 'service_provider_email', 'placeholder': 'Email'}}) }}</td> 
                                        {% endmacro %}
                                    </table>
                                </div>

                                <h4 class="ui dividing header">Autres intervenants</h4>

                                <div class="ui field">
                                    <table class="ui very basic table">
                                        <thead>
                                            <tr><th>Nom</th>
                                                <th>Type d'intervenant</th>
                                                <th>Téléphone</th>
                                                <th>Email</th>
                                                <th class="right aligned">Action</th>
                                            </tr>
                                        </thead>
                                        <tbody class="other-contributors" data-prototype="{{ forms.other_contributor_prototype(form.otherContributors.vars.prototype)|e }}">
                                            {% for otherContributor in form.otherContributors %}
                                                <tr>
                                                    {{ forms.other_contributor_prototype(otherContributor) }}
                                                </tr>
                                            {% endfor %}
                                        </tbody>
                                        {% macro other_contributor_prototype(childForm) %}
                                            <td>{{ form_widget(childForm.nom,{'attr':{'data-validate': 'other_contributor_name', 'placeholder': "Nom"}}) }}</td>
                                            <td>{{ form_widget(childForm.contributorType,{'attr':{'data-validate': 'other_contributorr_contributor_type', 'placeholder': "Type d'intervenant"}}) }}</td>
                                            <td>{{ form_widget(childForm.phone,{'attr':{'data-validate': 'other_contributor_phone', 'placeholder': 'Téléphone'}}) }}</td>
                                            <td>{{ form_widget(childForm.email,{'attr':{'data-validate': 'other_contributor_email', 'placeholder': 'Email'}}) }}</td> 
                                        {% endmacro %}
                                    </table>
                                </div>#}
                                
                                {#<h4 class="ui dividing header">Tâches</h4>
                                <div class="ui field">
                                    <table class="ui very basic table">
                                        <thead>
                                            <tr><th>Numero</th>
                                                <th>Désignation des ouvrages</th>
                                                <th>Unité</th>
                                                <th>Prix Unitaire</th>
                                                <th>Qté Marché</th>
                                                <th>Qté projet Exec</th>                                                   
                                                <th class="right aligned">Action</th>
                                            </tr>
                                        </thead>
                                        <tbody class="tasks" data-prototype="{{ forms.task_prototype(form.tasks.vars.prototype)|e }}">
                                            {% for task in form.tasks %}
                                                <tr>
                                                    {{ forms.task_prototype(task) }}
                                                </tr>
                                            {% endfor %}
                                        </tbody>
                                        {% macro task_prototype(childForm) %}
                                            {% import _self as forms %}
                                            <td>{{ form_widget(childForm.numero,{'attr':{'data-validate': 'task_name', 'placeholder': 'Numero du prix'}}) }}</td>
                                            <td style="width: 35%">{{ form_widget(childForm.nom,{'attr':{'data-validate': 'task_number', 'placeholder':"Désignation de l'ouvrage"}}) }}</td>
                                            <td>{{ form_widget(childForm.unite,{'attr':{'data-validate': 'task_unite', 'placeholder': 'Unité du prix'}}) }}</td>
                                            <td>{{ form_widget(childForm.prixUnitaire,{'attr':{'data-validate': 'task_prixUnitaire', 'placeholder': 'Prix unitaire du prix'}}) }}</td>
                                            <td>{{ form_widget(childForm.qtePrevueMarche,{'attr':{'data-validate': 'task_qtePrevueMarche', 'placeholder': 'Qté prevue marché'}}) }}</td>
                                            <td>{{ form_widget(childForm.qtePrevueProjetExec,{'attr':{'data-validate': 'task_qtePrevueProjetExec', 'placeholder': "Qté projet d'exécution"}}) }}</td>
                                                                  
                                        {% endmacro %}
                                    </table>
                                </div>#}
                                
                                {{form_widget(form._token)}}
                                <div class="field">
                                    {% include('OGIVEProjectBundle::form-message-success-error.html.twig') %}
                                </div>
                                <div class="field right aligned">
                                    <button id='od_update_project_submit_btn'  class="ui mini yellow button" type="submit">Sauvegarder</button>
                                    <a id='od_update_project_cancel_btn' class="ui mini red button"  href="{{path('project_gen_infos_get', {'id': project.id})}}">Annuler</a>
                                </div>
                            </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent()}}
    <script type="text/javascript" src="{{ asset('bundles/ogiveproject/js/project.js')}}"></script>
    <script>
        function addProjectManagerForm($collectionProjectManager, $newLinkTrProjectManager) {
            // Get the data-prototype explained earlier
            var prototype = $collectionProjectManager.data('prototype');

            // get the new index
            var index = $collectionProjectManager.data('index');

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var $newForm = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionProjectManager.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a projectManager" link li
            var $newFormTr = $('<tr></tr>').append($newForm);
            $newLinkTrProjectManager.before($newFormTr);
            addProjectManagerFormDeleteLink($newFormTr);
        }

        function addProjectManagerFormDeleteLink($projectManagerFormTr) {
            var $removeFormA = $('<td class="right aligned"><button class="ui mini red compact icon button" data-tooltip="Supprimer" data-position="bottom center" data-inverted="" data-variation="mini"><i class="trash icon"></i></button></td>');
            $projectManagerFormTr.append($removeFormA);
            $removeFormA.on('click', function (e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the projectManager form
                $projectManagerFormTr.remove();
            });
        }

        function addHolderForm($collectionHolder, $newLinkTrHolder) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            // get the new index
            var index = $collectionHolder.data('index');

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var $newForm = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a holder" link li
            var $newFormTr = $('<tr></tr>').append($newForm);
            $newLinkTrHolder.before($newFormTr);
            addHolderFormDeleteLink($newFormTr);
        }

        function addHolderFormDeleteLink($holderFormTr) {
            var $removeFormA = $('<td class="right aligned"><button class="ui mini red compact icon button" data-tooltip="Supprimer" data-position="bottom center" data-inverted="" data-variation="mini"><i class="trash icon"></i></button></td>');
            $holderFormTr.append($removeFormA);
            $removeFormA.on('click', function (e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the holder form
                $holderFormTr.remove();
            });
        }

        function addServiceProviderForm($collectionServiceProvider, $newLinkTrServiceProvider) {
            // Get the data-prototype explained earlier
            var prototype = $collectionServiceProvider.data('prototype');

            // get the new index
            var index = $collectionServiceProvider.data('index');

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var $newForm = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionServiceProvider.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a holder" link li
            var $newFormTr = $('<tr></tr>').append($newForm);
            $newLinkTrServiceProvider.before($newFormTr);
            addServiceProviderFormDeleteLink($newFormTr);
        }

        function addServiceProviderFormDeleteLink($holderFormTr) {
            var $removeFormA = $('<td class="right aligned"><button class="ui mini red compact icon button" data-tooltip="Supprimer" data-position="bottom center" data-inverted="" data-variation="mini"><i class="trash icon"></i></button></td>');
            $holderFormTr.append($removeFormA);
            $removeFormA.on('click', function (e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the holder form
                $holderFormTr.remove();
            });
        }

        var $collectionServiceProvider;

        // setup an "add a holder" link
        var $addServiceProviderLink = $('<button class="ui mini primary button"><i class="plus icon"></i> Ajouter un prestataire</button>');
        var $newLinkTrServiceProvider = $('<tr></tr>').append($addServiceProviderLink);

        var $collectionHolder;

        // setup an "add a holder" link
        var $addHolderLink = $('<button class="ui mini primary button" ><i class="plus icon"></i> Ajouter le titulaire</button>');
        var $newLinkTrHolder = $('<tr></tr>').append($addHolderLink);


        var $collectionProjectManager;

        // setup an "add a projectManager" link
        var $addProjectManagerLink = $('<button class="ui mini primary button" ><i class="plus icon"></i> Ajouter la mission de contrôle</button>');
        var $newLinkTrProjectManager = $('<tr></tr>').append($addProjectManagerLink);

        jQuery(document).ready(function () {
            /******** suppression des projectManagers *********/
            // Get the ul that holds the collection of projectManagers
            $collectionProjectManager = $('tbody.projectManagers');

            // add a delete link to all of the existing projectManager form li elements
            $collectionProjectManager.find('tr').each(function () {
                addProjectManagerFormDeleteLink($(this));
            });


            /******** Ajout des projectManagers *********/

            // Get the ul that holds the collection of projectManagers
            $collectionProjectManager = $('tbody.projectManagers');

            // add the "add a projectManager" anchor and li to the projectManagers ul
            $collectionProjectManager.append($newLinkTrProjectManager);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionProjectManager.data('index', $collectionProjectManager.find(':input').length);

            $addProjectManagerLink.on('click', function (e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new projectManager form (see next code block)
                addProjectManagerForm($collectionProjectManager, $newLinkTrProjectManager);
            });

            /******** suppression des holders *********/
            // Get the ul that holds the collection of holders
            $collectionHolder = $('tbody.holders');

            // add a delete link to all of the existing holder form li elements
            $collectionHolder.find('tr').each(function () {
                addHolderFormDeleteLink($(this));
            });


            /******** Ajout des holders *********/

            // Get the ul that holds the collection of holders
            $collectionHolder = $('tbody.holders');

            // add the "add a holder" anchor and li to the holders ul
            $collectionHolder.append($newLinkTrHolder);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find(':input').length);

            $addHolderLink.on('click', function (e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new holder form (see next code block)
                addHolderForm($collectionHolder, $newLinkTrHolder);
            });


            /******** suppression des service-providers *********/
            // Get the ul that holds the collection of service-providers
            $collectionServiceProvider = $('tbody.service-providers');

            // add a delete link to all of the existing service-provider form li elements
            $collectionServiceProvider.find('tr').each(function () {
                addServiceProviderFormDeleteLink($(this));
            });


            /******** Ajout des service-providers *********/

            // Get the ul that holds the collection of service-providers
            $collectionServiceProvider = $('tbody.service-providers');

            // add the "add a service-provider" anchor and li to the service-providers ul
            $collectionServiceProvider.append($newLinkTrServiceProvider);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionServiceProvider.data('index', $collectionServiceProvider.find(':input').length);

            $addServiceProviderLink.on('click', function (e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new service-provider form (see next code block)
                addServiceProviderForm($collectionServiceProvider, $newLinkTrServiceProvider);
            });
        });


        function addOtherContributorForm($collectionOtherContributor, $newLinkTrOtherContributor) {
            // Get the data-prototype explained earlier
            var prototype = $collectionOtherContributor.data('prototype');

            // get the new index
            var index = $collectionOtherContributor.data('index');

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var $newForm = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionOtherContributor.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a projectManager" link li
            var $newFormTr = $('<tr></tr>').append($newForm);
            $newLinkTrOtherContributor.before($newFormTr);

            addOtherContributorFormDeleteLink($newFormTr);
        }

        function addOtherContributorFormDeleteLink($projectManagerFormTr) {
            var $removeFormA = $('<td class="right aligned"><button class="ui mini red compact icon button" data-tooltip="Supprimer" data-position="bottom center" data-inverted="" data-variation="mini"><i class="trash icon"></i></button></td>');
            $projectManagerFormTr.append($removeFormA);
            $removeFormA.on('click', function (e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the projectManager form
                $projectManagerFormTr.remove();
            });
        }
        var $collectionOtherContributor;

        // setup an "add a other-contributor" link
        var $addOtherContributorLink = $('<button class="ui mini primary button"><i class="plus icon"></i> Ajouter un intervenant</button>');
        var $newLinkTrOtherContributor = $('<tr></tr>').append($addOtherContributorLink);

        jQuery(document).ready(function () {
            /******** suppression des other-contributors *********/
            // Get the ul that holds the collection of other-contributors
            $collectionOtherContributor = $('tbody.other-contributors');

            // add a delete link to all of the existing other-contributors form li elements
            $collectionOtherContributor.find('tr').each(function () {
                addOtherContributorFormDeleteLink($(this));
            });


            /******** Ajout des other-contributors *********/

            // Get the ul that holds the collection of other-contributors
            $collectionOtherContributor = $('tbody.other-contributors');

            // add the "add a projectManager" anchor and li to the other-contributors ul
            $collectionOtherContributor.append($newLinkTrOtherContributor);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionOtherContributor.data('index', $collectionOtherContributor.find(':input').length);

            $addOtherContributorLink.on('click', function (e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new projectManager form (see next code block)
                addOtherContributorForm($collectionOtherContributor, $newLinkTrOtherContributor);
            });

        });
    </script>
{% endblock %}